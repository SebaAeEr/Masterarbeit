version: "3"

services:
  spark-delta3:
    build: ./Spark
    container_name: spark-delta3
    networks:
      deltaNet:
    depends_on:
      - minio
      - hive
    environment:
      - SPARK_HOST_NAME=spark-delta3
      - SPARK_PORT=7077
      - SPARK_WEB_PORT=8080
      - METASTORE_HOSTNAME=hive
      - METASTORE_PORT=9083
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 7077:7077
      - 8080:8080
      - 15002:15002
      - 10000:10000
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
      - POSTGRES_DB=metastore
    networks:
      deltaNet:
  hive:
    container_name: hive
    build: ./Hive
    entrypoint: ./init-hive.sh
    ports:
      - 9083:9083
    environment:
      METASTORE_DB_HOSTNAME: postgres
    depends_on:
      - postgres
    networks:
      deltaNet:
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      deltaNet:
        aliases:
          - warehouse.minio
    ports:
      - 80:80
      - 9000:9000
    command: ["server", "/data", "--console-address", ":80"]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      deltaNet:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set public minio/warehouse;
      /usr/bin/mc mb minio/warehouse2;
      /usr/bin/mc anonymous set public minio/warehouse2;
      tail -f /dev/null
      "      
networks:
  deltaNet: